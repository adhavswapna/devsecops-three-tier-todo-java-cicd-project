pipeline {
    agent any

    environment {
        GIT_REPO_NAME = "three-tier-todo-java-cicd-project"
        GIT_USER_NAME = "adhavswapna"
        GIT_BRANCH = "main"
        GITHUB_TOKEN_CREDENTIAL_ID = 'github' // Update with your credential ID
        DOCKER_REPO_NAME = "swapnaswapna/backend-java-todo-app"
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                echo 'Cleaning workspace...'
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                echo 'Checking out the GitHub repository...'
                git branch: "${GIT_BRANCH}", credentialsId: "${GITHUB_TOKEN_CREDENTIAL_ID}", url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
            }
        }

        stage('Build and Test') {
            steps {
                echo 'Building and testing...'
                dir('todo-java-app/backend') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('OWASP Dependency Check') {
            steps {
                echo 'Running OWASP Dependency Check...'
                dir('todo-java-app/backend') {
                    // Adjust this as per your actual OWASP Dependency Check configuration
                    sh 'echo "Running OWASP Dependency Check"'
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                echo 'Updating deployment file...'
                dir('kubernetes-manifest-files/backend-k8-manifest') {
                    withCredentials([string(credentialsId: "${GITHUB_TOKEN_CREDENTIAL_ID}", variable: 'GITHUB_TOKEN')]) {
                        sh """
                            git config user.email "swapnaadhav123@gmail.com"
                            git config user.name "adhavswapna"
                            sed -i "s|image: .*|image: ${DOCKER_REPO_NAME}:${BUILD_NUMBER}|" deployment.yml
                            git add deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://adhavswapna:${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git ${GIT_BRANCH}
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                dir('kubernetes-manifest-files/backend-k8-manifest') {
                    sh 'kubectl apply -f deployment.yml'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Pipeline succeeded.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}

