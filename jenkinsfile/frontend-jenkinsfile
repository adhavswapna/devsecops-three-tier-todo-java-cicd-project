pipeline {
    agent {
        docker {
            image 'openjdk-17'
        }
    }

    environment {
        SCANNER_HOME = tool 'sonarqube-scanner'
        DOCKER_REPO_NAME = "swapnaswapna/frontend-todo-java-app"
        GIT_REPO_NAME = "three-tier-todo-java-cicd-project"
        GIT_USER_NAME = "adhavswapna"
        GIT_BRANCH = "main"
        SONAR_HOST_URL = "http://34.238.84.209:9000"
        GITHUB_TOKEN = credentials('GITHUB_TOKEN') // Using Jenkins credentials plugin
        SONARQUBE_TOKEN = credentials('sonarqube-token') // Using Jenkins credentials plugin
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: "${GIT_BRANCH}", url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}"
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd three-tier-java-cicd-project/todo-java-app/frontend && mvn clean package'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                    withSonarQubeEnv('sonarqube-token') {
                        sh """
                            
                        """
                    }
                }
            }
        }
        stage('OWASP Dependency Check Scan') {
            steps {
                dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                    dependencyCheck additionalArguments: '', odcInstallation: 'dp-check'
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                    sh 'trivy image $DOCKER_REPO_NAME'
                }
            }
        }
        stage('Docker Image Build') {
            steps {
                dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                    sh 'docker system prune -f'
                    sh 'docker container prune -f'
                    sh 'docker build -t ${DOCKER_REPO_NAME}:${BUILD_NUMBER} .'
                }
            }
        }
        stage('Update Deployment File') {
            steps {
                dir('three-tier-java-cicd-project/kubernetes-manifest-files/frontend-k8-manifest') {
                    withCredentials([string(credentialsId: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "swapnaadhav123@gmail.com"
                            git config user.name "adhavswapna"
                            sed -i "s|image: .*|image: ${DOCKER_REPO_NAME}:${BUILD_NUMBER}|" deployment.yml
                            git add deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git ${GIT_BRANCH}
                        '''
                    }
                }
            }
        }
    }
}
