pipeline {
    agent {
        docker {
            image 'openjdk:17' // Use the OpenJDK 17 Docker image
            reuseNode true // Reuse the node for subsequent stages
        }
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            environment {
                GIT_REPO_NAME = "three-tier-todo-java-cicd-project"
                GIT_USER_NAME = "adhavswapna"
                GIT_BRANCH = "main"
                GITHUB_TOKEN = credentials('github') // Updated credential ID for GitHub
            }
            steps {
                script {
                    echo 'Checking out the GitHub repository...'
                    git branch: "${GIT_BRANCH}", credentialsId: "${GITHUB_TOKEN}", url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
                }
            }
        }

        stage('Build and Test') {
            environment {
                DOCKER_REPO_NAME = "swapnaswapna/frontend-todo-java-app"
            }
            steps {
                script {
                    echo 'Building and testing...'
                    sh 'ls -ltr'
                    sh 'cd three-tier-java-cicd-project/todo-java-app/frontend && mvn clean package'
                }
            }
        }

        stage('Sonarqube Analysis') {
            environment {
                SONAR_HOST_URL = "http://34.238.84.209:9000"
                SONARQUBE_TOKEN = credentials('sonarqube-token') // Updated credential ID for SonarQube
            }
            steps {
                script {
                    echo 'Running SonarQube analysis...'
                    dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                        withSonarQubeEnv('sonarqube-token') {
                            sh """
                              sonar-scanner \
                              -Dsonar.projectKey=todo-three-tier-frontend \
                              -Dsonar.sources=. \
                              -Dsonar.host.url=${SONAR_HOST_URL} \
                              -Dsonar.login=${SONARQUBE_TOKEN}
                            """
                        }
                    }
                }
            }
        }

        stage('OWASP Dependency Check Scan') {
            steps {
                script {
                    echo 'Running OWASP Dependency Check...'
                    dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                        dependencyCheck additionalArguments: '', odcInstallation: 'dp-check'
                    }
                }
            }
        }

        stage('Trivy File Scan') {
            environment {
                DOCKER_REPO_NAME = "swapnaswapna/frontend-todo-java-app"
            }
            steps {
                script {
                    echo 'Running Trivy scan...'
                    dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                        sh "trivy image ${DOCKER_REPO_NAME}"
                    }
                }
            }
        }

        stage('Docker Image Build') {
            environment {
                DOCKER_REPO_NAME = "swapnaswapna/frontend-todo-java-app"
            }
            steps {
                script {
                    echo 'Building Docker image...'
                    dir('three-tier-java-cicd-project/todo-java-app/frontend') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh "docker build -t ${DOCKER_REPO_NAME}:${BUILD_NUMBER} ."
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "three-tier-todo-java-cicd-project"
                GIT_USER_NAME = "adhavswapna"
                GITHUB_TOKEN = credentials('github') // Updated credential ID for GitHub
                DOCKER_REPO_NAME = "swapnaswapna/frontend-todo-java-app"
            }
            steps {
                script {
                    echo 'Updating deployment file...'
                    dir('three-tier-java-cicd-project/kubernetes-manifest-files/frontend-k8-manifest') {
                        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                            sh '''
                                git config user.email "swapnaadhav123@gmail.com"
                                git config user.name "adhavswapna"
                                sed -i "s|image: .*|image: ${DOCKER_REPO_NAME}:${BUILD_NUMBER}|" deployment.yml
                                git add deployment.yml
                                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git ${GIT_BRANCH}
                            '''
                        }
                    }
                }
            }
        }
    }
}
